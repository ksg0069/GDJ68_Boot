#서버 포트
server.port=82

### Mybatis설정 DB 연결
#user
spring.datasource.hikari.username=user01

#password
spring.datasource.hikari.password=user01

#URL
#spring.datasource.url=jdbc:mariadb://54.180.97.90:3306/user01

#driver
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://54.180.97.90:3306/user01

### SQL 로그 설정
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0


logging.level.jdbc=OFF
logging.level.jdbc.sqlonly=OFF
logging.level.jdbc.sqltiming=DEBUG
logging.level.jdbc.audit=OFF
logging.level.jdbc.resultset=OFF
logging.level.jdbc.resultsettable=INFO
logging.level.jdbc.connection=OFF   
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO


#security 비활성화
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration


#Mapper 위치
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml

#config 위치
mybatis.config-location=classpath:database/config/config.xml


###jsp
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

### File 관리
# Multipart 사용 여부
spring.servlet.multipart.enabled=true
# 파일 하나당 최대 사이즈
spring.servlet.multipart.max-file-size=10MB
# 총 파일 최대 사이즈
spring.servlet.multipart.max-request-size=50MB

### Upload 경로
#Base 경로
app.upload=D:///upload/

app.board.notice=notice

app.board.qna=qna

# 파일 요청 url
app.url.path=/files/**

# 파일 매핑 base 경로
app.upload.mapping=file:///D:///upload/

## 전역레벨 설정
logging.level.root=info

## Web 요청이 발생시 파라미터 출력
## 종류나 값이 클 경우 생략 될 수도 있다
logging.level.org.springframework.web=trace
spring.mvc.log-request-details=true

### Message 설정
# message파일의 위치
spring.messages.basename=messages/message
spring.messages.encoding=UTF-8
spring.messages.use-code-as-default-message=true
### true  : 예외를 발생 시키지 않고 key를 출력
### false : 예외를 발생
#message 파일 내용의 변경을 감지하는 간격(초단위)
spring.messages.cache-duration=600

### Transaction 처리
spring.aop.proxy-target-class=true

### socialLogin 
#kakao
# Rest Api key
spring.security.oauth2.client.registration.kakao.client-id=e44fcc1993e7412f466f243c68e8fee1
# Admin key
spring.security.oauth2.client.registration.kakao.client-secret=0bf1a837747f721b9a36786c577e3777
# Redirect URL
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:82/login/oauth2/code/kakao
# 고정값
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# 회원가입시 추가로 가져 오는 유저 정보 항목
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,birthday
# Social Login 업체 명
spring.security.oauth2.client.registration.kakao.client-name=Kakao
# 인증 요청시 메서드 형식
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

## Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id






